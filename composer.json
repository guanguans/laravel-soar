{
    "name": "guanguans/laravel-soar",
    "keywords": [
        "soar",
        "sql",
        "mysql",
        "debug",
        "laravel",
        "statement",
        "optimize",
        "rewrite"
    ],
    "description": "An extension package for optimizing sql statements easily and easily in laravel applications. - 在 Laravel 应用程序中轻松容易的优化 sql 语句的扩展包。",
    "support": {
        "issues": "https://github.com/guanguans/laravel-soar/issues",
        "source": "https://github.com/guanguans/laravel-soar"
    },
    "type": "laravel",
    "license": "MIT",
    "minimum-stability": "dev",
    "authors": [
        {
            "name": "guanguans",
            "email": "ityaozm@gmail.com"
        }
    ],
    "require": {
        "guanguans/laravel-dump-sql": "^1.0.4",
        "guanguans/soar-php": "^2.2",
        "laravel/framework": "^5.5 || ^6.0 || ^7.0 || ^8.0"
    },
    "require-dev": {
        "brainmaestro/composer-git-hooks": "^2.7",
        "friendsofphp/php-cs-fixer": "^2.16",
        "mockery/mockery": "^1.2",
        "orchestra/testbench": "^3.7",
        "overtrue/phplint": "^2.4",
        "phpunit/phpunit": "^8.0",
        "vimeo/psalm": "^3.11"
    },
    "autoload": {
        "psr-4": {
            "Guanguans\\LaravelSoar\\": "src"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests"
        }
    },
    "config": {
        "sort-packages": true
    },
    "funding": [
        {
            "type": "wechat",
            "url": "https://www.guanguans.cn/images/wechat.jpeg"
        }
    ],
    "extra": {
        "laravel": {
            "providers": [
                "Guanguans\\LaravelSoar\\SoarServiceProvider"
            ],
            "aliases": {
                "Soar": "Guanguans\\LaravelSoar\\Facades\\Soar"
            }
        },
        "hooks": {
            "pre-commit": [
                "composer lint",
                "composer style-lint",
                "composer md-lint",
                "composer test"
            ],
            "pre-push": [
                "composer lint",
                "composer style-lint",
                "composer md-lint",
                "composer test"
            ]
        }
    },
    "scripts": {
        "post-update-cmd": [
            "cghooks update"
        ],
        "post-merge": "composer install",
        "post-install-cmd": [
            "cghooks add --ignore-lock",
            "cghooks update"
        ],
        "cghooks": "./vendor/bin/cghooks",
        "lint": "./vendor/bin/phplint --no-cache --configuration=.phplint.yml --ansi",
        "md-lint": "lint-md --config .lintmdrc *.md .github/*.md .github/ISSUE_TEMPLATE/*.md",
        "md-fix": "lint-md --config .lintmdrc --fix *.md .github/*.md .github/ISSUE_TEMPLATE/*.md",
        "style-lint": "./vendor/bin/php-cs-fixer fix --using-cache=no --diff --config=.php_cs.dist --dry-run --ansi",
        "style-fix": "./vendor/bin/php-cs-fixer fix --using-cache=no --config=.php_cs.dist --ansi",
        "psalm": "./vendor/bin/psalm",
        "test": "./vendor/bin/phpunit --coverage-text --colors=always --verbose",
        "test-coverage": "./vendor/bin/phpunit --coverage-html=coverage/ --coverage-clover=clover.xml --color=always --verbose"
    },
    "scripts-descriptions": {
        "cghooks": "Run git cghooks.",
        "lint": "Run phplint checks.",
        "md-lint": "Run markdown checks.",
        "md-fix": "Run markdown fixing.",
        "style-lint": "Run style checks (only dry run - no fixing!).",
        "style-fix": "Run style checks and fix violations.",
        "psalm": "Run psalm checks.",
        "test": "Run all tests.",
        "test-coverage": "Run all tests with coverage."
    }
}
